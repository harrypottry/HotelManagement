<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aaroom.persistence.ClaimAccountMapper" >
  <resultMap id="BaseResultMap" type="com.aaroom.beans.ClaimAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="flow_number" property="flowNumber" jdbcType="VARCHAR" />
    <result column="transaction_date" property="transactionDate" jdbcType="TIMESTAMP" />
    <result column="hotel_id" property="hotelId" jdbcType="INTEGER" />
    <result column="drawee" property="drawee" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="payment_account" property="paymentAccount" jdbcType="VARCHAR" />
    <result column="transaction_amount" property="transactionAmount" jdbcType="DOUBLE" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="receiving_bank" property="receivingBank" jdbcType="VARCHAR" />
    <result column="claimed_amount" property="claimedAmount" jdbcType="DOUBLE" />
    <result column="tobe_claimed_amount" property="tobeClaimedAmount" jdbcType="DOUBLE" />
    <result column="claim_times" property="claimTimes" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, flow_number, transaction_date, hotel_id, drawee, type, payment_account, transaction_amount, 
    summary, receiving_bank, claimed_amount, tobe_claimed_amount, claim_times, update_date, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aaroom.beans.ClaimAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from claim_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from claim_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from claim_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aaroom.beans.ClaimAccountExample" >
    delete from claim_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaroom.beans.ClaimAccount" >
    insert into claim_account (id, flow_number, transaction_date, 
      hotel_id, drawee, type, 
      payment_account, transaction_amount, summary, 
      receiving_bank, claimed_amount, tobe_claimed_amount, 
      claim_times, update_date, status
      )
    values (#{id,jdbcType=INTEGER}, #{flowNumber,jdbcType=VARCHAR}, #{transactionDate,jdbcType=TIMESTAMP}, 
      #{hotelId,jdbcType=INTEGER}, #{drawee,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{paymentAccount,jdbcType=VARCHAR}, #{transactionAmount,jdbcType=DOUBLE}, #{summary,jdbcType=VARCHAR}, 
      #{receivingBank,jdbcType=VARCHAR}, #{claimedAmount,jdbcType=DOUBLE}, #{tobeClaimedAmount,jdbcType=DOUBLE}, 
      #{claimTimes,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aaroom.beans.ClaimAccount" >
    insert into claim_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flowNumber != null" >
        flow_number,
      </if>
      <if test="transactionDate != null" >
        transaction_date,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="drawee != null" >
        drawee,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="paymentAccount != null" >
        payment_account,
      </if>
      <if test="transactionAmount != null" >
        transaction_amount,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="receivingBank != null" >
        receiving_bank,
      </if>
      <if test="claimedAmount != null" >
        claimed_amount,
      </if>
      <if test="tobeClaimedAmount != null" >
        tobe_claimed_amount,
      </if>
      <if test="claimTimes != null" >
        claim_times,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flowNumber != null" >
        #{flowNumber,jdbcType=VARCHAR},
      </if>
      <if test="transactionDate != null" >
        #{transactionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="drawee != null" >
        #{drawee,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="paymentAccount != null" >
        #{paymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null" >
        #{transactionAmount,jdbcType=DOUBLE},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="receivingBank != null" >
        #{receivingBank,jdbcType=VARCHAR},
      </if>
      <if test="claimedAmount != null" >
        #{claimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="tobeClaimedAmount != null" >
        #{tobeClaimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="claimTimes != null" >
        #{claimTimes,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaroom.beans.ClaimAccountExample" resultType="java.lang.Integer" >
    select count(*) from claim_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update claim_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.flowNumber != null" >
        flow_number = #{record.flowNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionDate != null" >
        transaction_date = #{record.transactionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hotelId != null" >
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.drawee != null" >
        drawee = #{record.drawee,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.paymentAccount != null" >
        payment_account = #{record.paymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionAmount != null" >
        transaction_amount = #{record.transactionAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.receivingBank != null" >
        receiving_bank = #{record.receivingBank,jdbcType=VARCHAR},
      </if>
      <if test="record.claimedAmount != null" >
        claimed_amount = #{record.claimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.tobeClaimedAmount != null" >
        tobe_claimed_amount = #{record.tobeClaimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.claimTimes != null" >
        claim_times = #{record.claimTimes,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update claim_account
    set id = #{record.id,jdbcType=INTEGER},
      flow_number = #{record.flowNumber,jdbcType=VARCHAR},
      transaction_date = #{record.transactionDate,jdbcType=TIMESTAMP},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      drawee = #{record.drawee,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      payment_account = #{record.paymentAccount,jdbcType=VARCHAR},
      transaction_amount = #{record.transactionAmount,jdbcType=DOUBLE},
      summary = #{record.summary,jdbcType=VARCHAR},
      receiving_bank = #{record.receivingBank,jdbcType=VARCHAR},
      claimed_amount = #{record.claimedAmount,jdbcType=DOUBLE},
      tobe_claimed_amount = #{record.tobeClaimedAmount,jdbcType=DOUBLE},
      claim_times = #{record.claimTimes,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaroom.beans.ClaimAccount" >
    update claim_account
    <set >
      <if test="flowNumber != null" >
        flow_number = #{flowNumber,jdbcType=VARCHAR},
      </if>
      <if test="transactionDate != null" >
        transaction_date = #{transactionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="drawee != null" >
        drawee = #{drawee,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="paymentAccount != null" >
        payment_account = #{paymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null" >
        transaction_amount = #{transactionAmount,jdbcType=DOUBLE},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="receivingBank != null" >
        receiving_bank = #{receivingBank,jdbcType=VARCHAR},
      </if>
      <if test="claimedAmount != null" >
        claimed_amount = #{claimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="tobeClaimedAmount != null" >
        tobe_claimed_amount = #{tobeClaimedAmount,jdbcType=DOUBLE},
      </if>
      <if test="claimTimes != null" >
        claim_times = #{claimTimes,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaroom.beans.ClaimAccount" >
    update claim_account
    set flow_number = #{flowNumber,jdbcType=VARCHAR},
      transaction_date = #{transactionDate,jdbcType=TIMESTAMP},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      drawee = #{drawee,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      payment_account = #{paymentAccount,jdbcType=VARCHAR},
      transaction_amount = #{transactionAmount,jdbcType=DOUBLE},
      summary = #{summary,jdbcType=VARCHAR},
      receiving_bank = #{receivingBank,jdbcType=VARCHAR},
      claimed_amount = #{claimedAmount,jdbcType=DOUBLE},
      tobe_claimed_amount = #{tobeClaimedAmount,jdbcType=DOUBLE},
      claim_times = #{claimTimes,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>